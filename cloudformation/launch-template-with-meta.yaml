AWSTemplateFormatVersion: 2010-09-09
Resources:
  myLaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Metadata:
      AWS::CloudFormation::Init:
        config:
          packages:
            yum:
              httpd: []
          services:
            sysvinit:
              httpd:
                enabled: 'true'
                ensureRunning: 'true'
          files:
            /var/www/html/index.html:
              content: !Sub |
                <html><center><h1>Hello World from MetaData!</h1></center></html>
    Properties:
      LaunchTemplateName: my-template-for-auto-scaling
      VersionDescription: test description
      LaunchTemplateData:
        ImageId: ami-051f7e7f6c2f40dc1
        InstanceType: t2.micro
        KeyName: test-key
        SecurityGroupIds:
          - "sg-bd963e9a"
        BlockDeviceMappings:
          - DeviceName: /dev/xvda
            Ebs:
              VolumeSize: 20
              VolumeType: gp2
              Encrypted: true
              KmsKeyId: "fb93bebc-b952-4ee6-a353-167ef1fc7500"
          - DeviceName: /dev/xvdc
            Ebs:
              VolumeSize: 30
              VolumeType: gp2
              Encrypted: true
              KmsKeyId: "fb93bebc-b952-4ee6-a353-167ef1fc7500"
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash -xe
            /opt/aws/bin/cfn-init --stack ${AWS::StackName} --resource myLaunchTemplate --region ${AWS::Region}
  myASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchTemplate:
        LaunchTemplateId: !Ref myLaunchTemplate
        Version: !GetAtt myLaunchTemplate.LatestVersionNumber
      MaxSize: '1'
      MinSize: '0'
      DesiredCapacity: '1'
      TargetGroupARNs:
        - !Ref myTargetGroup 
      VPCZoneIdentifier:
        - subnet-4f086e02
        - subnet-9f36e1f9
  myTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      VpcId: vpc-b506e5c8

  myApplicationLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      SecurityGroups:
        - sg-bd963e9a
      Subnets:
        - subnet-4f086e02
        - subnet-9f36e1f9
  myListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref myApplicationLoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: arn:aws:acm:us-east-1:600605052115:certificate/a528c57d-33ac-463b-bf9e-67a31598f134
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref myTargetGroup
  myDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: myasgtest.kodaru.net
      HostedZoneId: Z04862112X8XBNRDZNXJM
      Type: A
      AliasTarget: 
        DNSName: !GetAtt myApplicationLoadBalancer.DNSName
        HostedZoneId: !GetAtt myApplicationLoadBalancer.CanonicalHostedZoneID